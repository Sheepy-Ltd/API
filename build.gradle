import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

plugins {
    id 'java'
    id 'maven'
    id 'application'
    id 'java-library'

    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'net.nemerosa.versioning' version '2.8.2'
    id 'net.kyori.blossom' version '1.1.0'
}

def git = versioning.info
def ver = new Version(major: 1, minor: 0, patch: 0, build: '')

def buildAuthor = System.getProperty('user.name')
def buildDate = ZonedDateTime.now().format(DateTimeFormatter.ofPattern("dd-MM-yyyy 'at' HH:mm:ss.SSS zZ"))

group = 'com.sheepybot'
version = ver.toString()

mainClassName = group + '.Bot'
description = ''

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
    jcenter()
    
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation group: 'org.jetbrains', name: 'annotations', version: '15.0'
    implementation group: 'com.google.guava', name: 'guava', version: '23.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'
    implementation group: 'org.json', name: 'json', version: '20170516'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    implementation group: 'com.moandjiezana.toml', name: 'toml4j', version: '0.7.1'
    implementation group: 'io.sentry', name: 'sentry-log4j2', version: '1.7.10'
    implementation group: 'io.netty', name: 'netty-all', version: '5.0.0.Alpha2'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.4.2'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.12'

    api 'com.github.FredBoat:Lavalink-Client:4.0'
    api 'net.dv8tion:JDA:4.1.1_156'
}

blossom {
    def file = group + '/BotInfo.java'

    replaceToken '@version_major@', ver.major, file
    replaceToken '@version_minor@', ver.minor, file
    replaceToken '@version_patch@', ver.patch, file

    replaceToken '@version_build@', ver.build, file

    replaceToken '@build_author@', buildAuthor, file
    replaceToken '@build_date@', buildDate, file

    replaceToken '@git_branch@', git.branch, file
    replaceToken '@git_commit@', git.commit, file
}

final class Version {

    String major
    String minor
    String patch
    String build

    @Override
    String toString() {
        return String.format("%s.%s.%s_%s", major, minor, patch, build)
    }
}